<template>
	<view class="page flex">
		<img class="goods-pic" mode="aspectFill"
			src="http://a9591bba3d7a4cf76617.qiniucdn.apicloud-system.com/apicloud/7c2a4833b73b7003b4ae246bac8b40ee.jpg"
			alt="" />
		<view class="back-btn" style={{'top:'+safeAreaTop+'px'}} @click="closeWin">
			<img class="back-btn-img" src="../../image/icon/icon-goods-detail-back-btn.png" alt="" />
		</view>
		<view class="goods-info">
			<text class="goods-name">麻辣捞派滑牛肉</text>
			<text class="goods-desc">超级美味的麻辣捞派滑牛肉哦</text>
		</view>
		<view class="price-count flex-h flex-1">
			<view class="goods-price-wrap flex-h">
				<text class="goods-price-signal">¥</text>
				<text class="goods-price"> 48</text>
				<text class="goods-price-signal">.00</text>
			</view>
			<view class="num-count">

				<view class="flex-h">
					<img class="num-btn num-decrease" src="../../image/icon/icon-cart-num-decrease.png" />
					<text class="num-text">1</text>
					<img class="num-btn num-increase" src="../../image/icon/icon-cart-num-increase.png" />
				</view>

			</view>
		</view>

		<safe-area class="action-bar">

			<view class="action-btn btn-add-cart" @click="addCart">
				<text class="btn-text">加入购物车</text>
			</view>
			<view class="action-btn btn-crash" @click="crash">
				<text class="btn-text">结算</text>
			</view>

		</safe-area>
	</view>
</template>

<script>
import GoodsCounter from "../../components/goods-counter.stml";
import GoodsAction from "../../components/goods-action.stml";
import { setTabBarBadge } from "../../script/util";

export default {
	name: "goods_detail",

	data() {
		return {
			goods: false,
			count: 1,
			cartData: false,
			safeAreaTop: 0
		}
	},
	methods: {
		countChange(e) {
			this.data.count += e.detail.change;
		},
		closeWin() {
			api.closeWin();
		},
		addCart() {
			let cartList = api.getPrefs({ sync: true, key: 'CART-DATA' }) || '{}'
			cartList = JSON.parse(cartList)
			cartList[this.data.goods.id] = {
				goods: this.data.goods, count: this.data.count
			};
			api.setPrefs({
				key: 'CART-DATA',
				value: cartList
			});

			api.toast({
				msg: '成功加入' + this.data.count + '个到购物车', location: 'middle'
			})
			setTabBarBadge(2, Object.keys(cartList).length);
		},
		crash() {
			const pageParam = { list: [this.props] };
			api.openWin({
				name: 'pending_order',
				url: '../../pages/pending_order/pending_order.stml',
				pageParam
			});
		}
	},
	computed: {
		price() {
			return Number(this.data.goods.curt_price).toFixed(2).split('.')
		}
	}
}
</script>

<style scoped>
.page {
	height: 100%;
}

.goods-pic {
	width: 100%;
	height: 375px;
}

.goods-price-wrap {
	flex: 1;
}

.goods-info {
	padding: 16px 15px;
	border-bottom: 1px solid #eeeeee;
}

.goods-name {
	font-size: 18px;
	font-weight: 500;
	color: #333333;
}

.goods-desc {
	font-size: 15px;
	color: #666666;
	margin-top: 5px;
}

.price-count {
	padding: 10px 15px;
	flex: 1;
	align-items: flex-start;
}

.goods-price-signal {
	font-size: 20px;
	color: #fe5760;
	margin-top: 8px;
}

.goods-price {
	font-size: 28px;
	color: #fe5760;
	font-weight: bold;
}

.num-count {
	margin-top: 6px;
}

.back-btn {
	position: absolute;
	left: 15px;
	width: 32px;
	height: 32px;
	z-index: 999;
}
.back-btn-img {
	width: 32px;
	height: 32px;
}

.flex-h {
	flex-direction: row;
}

.flex-1 {
	flex: 1;
}

.flex-center {
	align-items: center;
	justify-content: center;
	text-align: center;
}

.action-bar {
	flex-direction: row;
	background: #fff;
}

.btn-add-cart {
	background: #ffc54a;
	height: 48px;
}

.btn-crash {
	background: #fe5760;
	height: 48px;
}

.btn-text {
	color: #fff;
	font-size: 15px;
}

.action-btn {
	flex: 1;
	align-items: center;
	justify-content: center;
}

.num-btn {
	width: 22px;
	height: 22px;
	background-size: 22px 22px;
}

.num-text {
	padding: 0 8px;
	font-size: 14px;
	color: #333;
	margin-top: 2px;
	min-width: 28px;
	text-align: center;
}
</style>